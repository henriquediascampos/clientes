plugins {
	id "org.springframework.boot" version "2.5.4"
}

ext {
	set("spring", "2.5.4")
	set("lombok", "1.18.20")
	set("postgres", "42.2.23")
	set("gson", "2.8.8")
}

allprojects {
	group = "io.github.henriquediascampos"
	version = "0.0.1-SNAPSHOT"
}

subprojects {
	repositories {
		mavenCentral()
	}

	apply plugin: "java"
  apply plugin: "java-library"

	dependencies {
		implementation "org.springframework.boot:spring-boot-starter:${spring}"
		implementation "org.springframework.boot:spring-boot-devtools:${spring}"
		compileOnly("org.springframework.boot:spring-boot-devtools:${spring}")
		compileOnly "org.projectlombok:lombok:${lombok}"
		annotationProcessor "org.projectlombok:lombok:${lombok}"
	}
}

project(":clientsback-common") {
  sourceCompatibility = "11"
	dependencies {
		api "com.google.code.gson:gson:${gson}"
		api "org.springframework.boot:spring-boot-starter-webflux:${spring}"
		implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${spring}"
  }
}

project(":clientsback-liquibase") {
  sourceCompatibility = "11"
	dependencies {
		implementation project(":clientsback-common")
		api 'org.liquibase:liquibase-core:4.5.0'
	}
}

project(":clientsback-entity") {
  sourceCompatibility = "11"

	dependencies {
		api "org.springframework.boot:spring-boot-starter-data-jpa:${spring}"
		api "org.postgresql:postgresql:${postgres}"
		api 'org.hibernate:hibernate-core:5.5.7.Final'
		api 'org.hibernate:hibernate-entitymanager:5.5.7.Final'
		api 'javax.validation:validation-api:2.0.1.Final'
		implementation project(":clientsback-common")
		api project(":clientsback-liquibase")
	}
}

project(":clientsback-service") {
  sourceCompatibility = "11"

	dependencies {
		implementation project(":clientsback-common")
		api project(":clientsback-entity")
    api "org.springframework.boot:spring-boot-starter-security:${spring}"
    api "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.1.RELEASE"
    api "org.springframework.security:spring-security-jwt:1.1.0.RELEASE"
	}
}

project(":clientsback-controller") {
  sourceCompatibility = "11"
	apply plugin: "org.springframework.boot"

	dependencies {
		implementation project(":clientsback-common")
		implementation project(":clientsback-service")
		implementation "org.springframework.boot:spring-boot-starter-web:${spring}"
		implementation "org.springframework.boot:spring-boot-starter-validation:${spring}"

	}

  springBoot {
      buildInfo()
  }

  bootJar {
    archiveBaseName.set(project.name)
    version =  project.version
    // archiveFileName.set("clientsback-back.jar")

    launchScript()
    manifest { attributes("Implementation-Version": version) }
    if (project.hasProperty("archiveName")) {
      archiveFileName.set(project.properties["archiveName"] as String)
    }
  }

  task copy(type: Copy) {
    delete rootProject.file("build/")
    includeEmptyDirs = true
    def fromDir = rootProject.file("${project.name}/build/libs/")
    def toDir = rootProject.file("build/libs/")
    from fromDir
    into toDir
  }

  build.dependsOn copy, bootBuildInfo
}